#!/bin/bash -e
#
# S2I assemble script for the 'mojo-{version}-perl-{version}' images.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
	# If the 'mojo-{version}-perl-{version}' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/libexec/s2i/usage
fi

shopt -s dotglob
# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/* /opt/app-root
fi

echo "---> Installing application source..."
mv /tmp/src/* ./

export CPAN_MIRROR=${CPAN_MIRROR:-""}
MIRROR_ARGS=""
if [ -n "$CPAN_MIRROR" ]; then
  MIRROR_ARGS="--mirror $CPAN_MIRROR"
fi

if [ "${ENABLE_CPAN_TEST}" = true ]; then
  export ENABLE_CPAN_TEST=""
else
  export ENABLE_CPAN_TEST="--notest"
fi

if [ -f "cpanfile" ]; then
  echo "---> Installing modules from cpanfile ..."
  cpanm $MIRROR_ARGS $ENABLE_CPAN_TEST -l /opt/app-root/usr --installdeps .
else
  echo "---> No cpanfile found, nothing to install"
fi

if [ -f "Build.PL" ]; then
  echo "---> Building from Build.PL"
  perl Build.PL \
  && ./Build installdeps --cpan_client "$CPANM $MIRROR_ARGS $ENABLE_CPAN_TEST -l /opt/app-root/usr" \
  && ./Build
else
  echo "---> No Build script found"
fi
rm -rf /opt/app-root/src/.cpanm

fix-permissions ./
